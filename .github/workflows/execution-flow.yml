name: Website Deployment
on:
  push:
    branches:
      - main
env:
  npm_config_cache: ".npm"
jobs:
  lint:
    runs-on: [self-hosted]
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: .npm/
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm set cache .npm
          npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: self-hosted
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: .npm/
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: echo $JSON
        env:
          JSON: ${{ toJSON(steps.cache.outputs) }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm set cache .npm
          npm ci
      - name: Test code
        id: test
        run: npm run test
      - name: Upload test report
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: .npm/
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm set cache .npm
          npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: self-hosted
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo $JSON
        env:
          JSON: ${{ toJson(github) }}
